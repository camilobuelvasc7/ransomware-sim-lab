name: Ransomware Behaviour Simulation (Safe)

on:
  workflow_dispatch:
    inputs:
      passphrase:
        description: "Optional passphrase for key derivation (leave empty to use default)"
        required: false

jobs:
  simulate:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # Debug: show what files are in the repo
      - name: List repo contents (debug)
        shell: pwsh
        run: |
          Write-Host "PWD:" (Get-Location)
          Get-ChildItem -Recurse | Select-Object FullName

      # Safety net: create sample files if they're missing
      - name: Prepare sample data (if missing)
        shell: pwsh
        run: |
          if (-not (Test-Path "sample_data")) { New-Item -ItemType Directory -Path sample_data | Out-Null }
          if (-not (Test-Path "sample_data/notes.txt"))   { Set-Content -Path sample_data/notes.txt  -Value 'Team notes for simulation. This is harmless sample content.' }
          if (-not (Test-Path "sample_data/report.txt"))  { Set-Content -Path sample_data/report.txt -Value 'Quarterly report draft. Sample content for lab use.' }
          if (-not (Test-Path "sample_data/budget.csv"))  { Set-Content -Path sample_data/budget.csv -Value "item,amount`nlaptops,2400`ntraining,1500" }

      - name: Run simulation (encrypt)
        shell: pwsh
        run: |
          # Build a safe argument array so quoting never breaks
          $argsList = @("--lab-dir","lab_output","--source","sample_data")  # uses default ext=locked
          if ("${{ github.event.inputs.passphrase }}") {
            $argsList += @("--key","${{ github.event.inputs.passphrase }}")
          }
          python --version
          python simulator.py @argsList

      - name: Upload artifacts (log + ransom note + encrypted files)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lab-artifacts
          path: |
            lab_output/**
            !lab_output/working_copy/**

      - name: Show last 20 log lines (for quick proof)
        if: always()
        shell: pwsh
        run: |
          if (Test-Path lab_output/ransomware_behavior.log) {
            Get-Content -Path lab_output/ransomware_behavior.log | Select-Object -Last 20
          } else {
            Write-Host "No log file found."
          }
